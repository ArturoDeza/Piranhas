function out = poolnew(in, sigma)%% Pools with a gaussian.  Note assumes that input image is actually% 4 equal-size images, side by side.%%	Usage: [out] = pool(input_image, sigma)in1 = getH(in);in2 = getV(in);in3 = getL(in);in4 = getR(in);if nargin < 2,    out1 = reduce(RRoverlapconvexpand(in1));    out2 = reduce(RRoverlapconvexpand(in2));    out3 = reduce(RRoverlapconvexpand(in3));    out4 = reduce(RRoverlapconvexpand(in4));else    kernel = RRgaussfilter1D(round(2*sigma), sigma);    out1 = reduce(RRoverlapconvexpand(in1, kernel), kernel);    out2 = reduce(RRoverlapconvexpand(in2, kernel), kernel);    out3 = reduce(RRoverlapconvexpand(in3, kernel), kernel);    out4 = reduce(RRoverlapconvexpand(in4, kernel), kernel);    endclear in1 in2 in3 in4out = [out1 out2 out3 out4];return;